<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- Define propriedades para configuração -->
    <springProperty scope="context" name="APP_NAME" source="spring.application.name" defaultValue="banking-system"/>
    <springProperty scope="context" name="LOG_LEVEL" source="logging.level.root" defaultValue="INFO"/>
    <springProperty scope="context" name="LOG_FILE" source="logging.file.name" defaultValue="logs/banking-system.log"/>
    
    <!-- Console Appender para desenvolvimento -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp/>
                <logLevel/>
                <loggerName/>
                <mdc/>
                <arguments/>
                <message/>
                <stackTrace/>
            </providers>
            <jsonGeneratorDecorator class="net.logstash.logback.decorate.PrettyPrintingJsonGeneratorDecorator"/>
        </encoder>
    </appender>
    
    <!-- File Appender para produção -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_FILE}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>logs/banking-system.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>30</maxHistory>
            <totalSizeCap>3GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp/>
                <version/>
                <logLevel/>
                <loggerName/>
                <mdc/>
                <arguments/>
                <message/>
                <stackTrace/>
                <pattern>
                    <pattern>
                        {
                            "application": "${APP_NAME}",
                            "environment": "${SPRING_PROFILES_ACTIVE:-default}",
                            "version": "${APP_VERSION:-1.0.0}"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
    </appender>
    
    <!-- Appender específico para auditoria bancária -->
    <appender name="AUDIT" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/banking-audit.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>logs/banking-audit.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxFileSize>50MB</maxFileSize>
            <maxHistory>90</maxHistory>
            <totalSizeCap>5GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp/>
                <logLevel/>
                <loggerName/>
                <mdc/>
                <arguments/>
                <message/>
                <pattern>
                    <pattern>
                        {
                            "audit_type": "banking_operation",
                            "application": "${APP_NAME}",
                            "environment": "${SPRING_PROFILES_ACTIVE:-default}"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
    </appender>
    
    <!-- Appender para métricas de performance -->
    <appender name="METRICS" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/banking-metrics.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>logs/banking-metrics.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxFileSize>50MB</maxFileSize>
            <maxHistory>7</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp/>
                <logLevel/>
                <loggerName/>
                <mdc/>
                <arguments/>
                <message/>
                <pattern>
                    <pattern>
                        {
                            "metric_type": "performance",
                            "application": "${APP_NAME}"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
    </appender>
    
    <!-- Datadog Log Appender -->
    <springProfile name="production,datadog">
        <appender name="DATADOG" class="ch.qos.logback.core.ConsoleAppender">
            <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
                <providers>
                    <timestamp/>
                    <logLevel/>
                    <loggerName/>
                    <mdc/>
                    <arguments/>
                    <message/>
                    <stackTrace/>
                    <pattern>
                        <pattern>
                            {
                                "dd.service": "${APP_NAME}",
                                "dd.env": "${DD_ENV:-${SPRING_PROFILES_ACTIVE:-default}}",
                                "dd.version": "${DD_VERSION:-1.0.0}",
                                "dd.trace_id": "%X{dd.trace_id:-}",
                                "dd.span_id": "%X{dd.span_id:-}",
                                "application": "${APP_NAME}",
                                "environment": "${DD_ENV:-${SPRING_PROFILES_ACTIVE:-default}}"
                            }
                        </pattern>
                    </pattern>
                </providers>
            </encoder>
        </appender>
    </springProfile>
    
    <!-- Logger específico para auditoria -->
    <logger name="com.bank.BankingSystemApplication.audit" level="INFO" additivity="false">
        <appender-ref ref="AUDIT"/>
        <appender-ref ref="CONSOLE"/>
    </logger>
    
    <!-- Logger específico para métricas -->
    <logger name="com.bank.BankingSystemApplication.metrics" level="DEBUG" additivity="false">
        <appender-ref ref="METRICS"/>
    </logger>
    
    <!-- Loggers específicos para diferentes perfis -->
    <springProfile name="default,development">
        <root level="${LOG_LEVEL}">
            <appender-ref ref="CONSOLE"/>
        </root>
        
        <!-- Debug para desenvolvimento -->
        <logger name="com.bank.BankingSystemApplication" level="DEBUG"/>
        <logger name="org.springframework.kafka" level="WARN"/>
        <logger name="io.github.resilience4j" level="DEBUG"/>
    </springProfile>
    
    <springProfile name="production">
        <root level="${LOG_LEVEL}">
            <appender-ref ref="FILE"/>
            <appender-ref ref="CONSOLE"/>
        </root>
        
        <!-- Configuração otimizada para produção -->
        <logger name="com.bank.BankingSystemApplication" level="INFO"/>
        <logger name="org.springframework.kafka" level="WARN"/>
        <logger name="io.github.resilience4j" level="INFO"/>
        <logger name="org.hibernate.SQL" level="WARN"/>
        <logger name="org.springframework.web" level="WARN"/>
    </springProfile>
    
    <springProfile name="datadog">
        <root level="${LOG_LEVEL}">
            <appender-ref ref="DATADOG"/>
            <appender-ref ref="FILE"/>
        </root>
        
        <!-- Configuração para Datadog -->
        <logger name="com.bank.BankingSystemApplication" level="INFO"/>
        <logger name="org.springframework.kafka" level="WARN"/>
        <logger name="io.github.resilience4j" level="INFO"/>
    </springProfile>
    
    <!-- Configuração para testes -->
    <springProfile name="test">
        <root level="WARN">
            <appender-ref ref="CONSOLE"/>
        </root>
        
        <logger name="com.bank.BankingSystemApplication" level="INFO"/>
    </springProfile>
</configuration>