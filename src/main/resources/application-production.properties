# Production Profile Configuration
# Twelve-Factor App compliance for production environment

# Database Configuration (Production)
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE:20}
spring.datasource.hikari.minimum-idle=${DB_MIN_IDLE:5}
spring.datasource.hikari.connection-timeout=${DB_CONNECTION_TIMEOUT:30000}

# JPA Configuration (Production)
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# Kafka Configuration (Production)
spring.kafka.bootstrap-servers=${KAFKA_SERVERS}
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.batch-size=16384
spring.kafka.producer.linger-ms=5
spring.kafka.producer.buffer-memory=33554432
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.session-timeout-ms=30000
spring.kafka.consumer.heartbeat-interval-ms=10000

# Resilience4j Configuration (Production)
resilience4j.circuitbreaker.instances.banking-service.failure-rate-threshold=30
resilience4j.circuitbreaker.instances.banking-service.wait-duration-in-open-state=60s
resilience4j.circuitbreaker.instances.banking-service.sliding-window-size=20
resilience4j.circuitbreaker.instances.banking-service.minimum-number-of-calls=10

resilience4j.retry.instances.banking-service.max-attempts=5
resilience4j.retry.instances.banking-service.wait-duration=1000ms

resilience4j.ratelimiter.instances.banking-api.limit-for-period=500
resilience4j.ratelimiter.instances.banking-api.timeout-duration=5s

# Logging Configuration (Production)
logging.level.root=WARN
logging.level.com.bank=INFO
logging.level.org.springframework.kafka=WARN
logging.pattern.file=%d{ISO8601} [%thread] %-5level %logger{36} - %msg%n
logging.file.name=${LOG_FILE:/var/log/banking-app/application.log}

# Security Configuration (Production)
server.ssl.enabled=${SSL_ENABLED:false}
server.ssl.key-store=${SSL_KEYSTORE:}
server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD:}

# Actuator Configuration (Production)
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.security.enabled=true

# Performance Tuning (Production)
server.tomcat.threads.max=${MAX_THREADS:400}
server.tomcat.threads.min-spare=${MIN_THREADS:50}
server.tomcat.accept-count=${ACCEPT_COUNT:100}
server.tomcat.max-connections=${MAX_CONNECTIONS:8192}

# Caching Configuration (Production)
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=300s

# Datadog Configuration (Production)
management.metrics.export.datadog.enabled=${DATADOG_ENABLED:true}
management.metrics.export.datadog.api-key=${DD_API_KEY}
management.metrics.export.datadog.application-key=${DD_APPLICATION_KEY}
management.metrics.export.datadog.step=30s
management.metrics.export.datadog.connect-timeout=5s
management.metrics.export.datadog.read-timeout=15s
management.metrics.export.datadog.host-tag=${DD_HOST:${HOSTNAME}}
management.metrics.export.datadog.descriptions=false

# Datadog Service Configuration (Production)
datadog.service.name=${DD_SERVICE:banking-system}
datadog.service.version=${DD_VERSION}
datadog.environment=${DD_ENV:production}
datadog.tags=${DD_TAGS:team:backend,domain:banking,architecture:hexagonal,env:production}